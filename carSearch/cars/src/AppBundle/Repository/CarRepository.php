<?php

namespace AppBundle\Repository;

/**
 * CarRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CarRepository extends \Doctrine\ORM\EntityRepository
{

    public function fetchAllSearch($mark, $model, $engine, $color, $minPrice, $maxPrice) {

        $qb = $this->createQueryBuilder('c');
        $qb->select('c')
        ->innerJoin('AppBundle:Mark', 'm', 'WITH', 'm.id = c.mark')
        ->innerJoin('AppBundle:Model', 'md', 'WITH', 'md.id = c.model')
        ->innerJoin('AppBundle:Engine', 'e', 'WITH', 'e.id = c.engine')
        ->innerJoin('AppBundle:Color', 'cl', 'WITH', 'cl.id = c.color')
        ->Where('c.mark = ' . $mark)
        ->andWhere('c.model = ' . $model)
        ->andWhere('c.engine = ' . $engine)
        ->andWhere('c.color = ' . $color)
        ->andWhere('c.price > ' . (int)$minPrice)
        ->andWhere('c.price < ' . (int)$maxPrice)
        ->orderBy('c.id','ASC');

        return $qb->getQuery()->getResult();

    }

    public function fetchCarsCount() {

        $queryBuilder = $this->createQueryBuilder('c');

        return $queryBuilder
        ->select($queryBuilder->expr()->count('c'))
        ->getQuery()->getSingleScalarResult();

    }

    /**
     *
     * @param $current_page 0...n
     * @param $num_result 10
     */
    public function  fetchCarPaginated($current_page, $num_result) {

        $current_page--;

        $qb = $this->createQueryBuilder('c');
        $qb->select('c')
        ->setFirstResult($current_page * $num_result)
        ->setMaxResults($num_result);

        return $qb->getQuery()->getResult();
    }

}
